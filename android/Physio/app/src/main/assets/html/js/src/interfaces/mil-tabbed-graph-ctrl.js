/*
 *  Licensed Materials - Property of IBM
 *  © Copyright IBM Corporation 2014. All Rights Reserved.
 *  This sample program is provided AS IS and may be used, executed, copied and modified without royalty 
 *  payment by customer (a) for its own instruction and study, (b) in order to develop applications designed to 
 *  run with an IBM product, either for customer's own internal use or for redistribution by customer, as part 
 *  of such an application, in customer's own products.
 */

/**
 *  @class ReadyAppHC.milCtrl.milTabbedGraphCtrl
 *  @memberOf ReadyAppHC
 *  @augments ReadyAppHC.milCtrl
 *  @description Acts as the interface for all controllers that need tabs for day, week, month,
 *  and year views. This interface defines variables that identify tabs and associates those tabs
 *  with a particular kind of graph directive. (For example, the day route is to the integer {@linkcode 100}, 
 *  and {@linkcode 100} is to bar graphs.) This interface assists with routing for each tab, so you should set
 *  the {@linkcode baseRoute} property in your controller's initializer so that this interface knows how to
 *  build routes when a tab is pressed. A page reload will not be triggered when this interface creates
 *  a new route for tabs; in fact, reloads are manually surpressed by this class. The route change exists
 *  solely for the native code to inject new JSON data when a new tab is pressed.
 *  
 *  @property {string} baseRoute        - Defines the basis for routes that are generated by this interface when a new tab is pressed. For example, if the route {@linkcode /WebView/foo} is provided, then the routes {@linkcode /WebView/foo_day}, {@linkcode /WebView/foo_week}, {@linkcode /WebView/foo_month}, and {@linkcode /WebView/foo_year} are generated by this interface when the appropriate tab is pressed.
 *  @property {integer} displayType     - Defines the type of graphs that should be displayed, where the integer {@linkcode 0} represents bar graphs, and the integer {@linkcode 1} represnts line graphs. This should be used in conjunction with an {@linkcode ng-switch} statement in the HTML code. (For example, when {@linkcode 0}, define a bunch of {@linkcode bar-graph} directives.)
 *  @property {integer} selectedTab     - Defines the tab that is selected, where the integer {@linkcode 48} represents days, the integer {@linkcode 14} represents weeks, the integer {@linkcode 8} represents months, and the integer {@linkcode 24} reprsents years.
 *  @property {integer} dayVal          - Defined by the integer {@linkcode 48}.
 *  @property {integer} weekVal         - Defined by the integer {@linkcode 14}.
 *  @property {integer} monthVal        - Defined by the integer {@linkcode 8}.
 *  @property {integer} yearVal         - Defined by the integer {@linkcode 24}.
 *
 *  @author Jonathan Ballands
 *  @copyright © 2014 IBM Corporation. All Rights Reserved.
 */
angular.module('ReadyAppHC').controller('milTabbedGraphCtrl', function($scope, $controller, choreographerService, selectedTab) {
    
    // Inheritance
    angular.extend(this, $controller('milCtrl', {$scope: $scope}));
    
    /*
     *  Public instance variables
     */
    
    $scope.baseRoute = undefined;
    $scope.displayType = undefined;
    $scope.dayVal = 48;
    $scope.weekVal = 14;
    $scope.monthVal = 8;
    $scope.yearVal = 24;
    
    /*
     *  Private instance variables
     */
    
    var BAR_GRAPH = 0;
    var LINE_GRAPH = 1;
    
    /*
     *  Initializer
     */
    $scope.selectedTab = selectedTab;
    if ($scope.selectedTab == 48) {
        $scope.displayType = BAR_GRAPH;
    }
    else {
        $scope.displayType = LINE_GRAPH;
    }
    choreographerService.notify($scope.selectedTab);
    
    /**
     *  @function ReadyAppHC.milCtrl.milTabbedGraphCtrl.tabClicked
     *  @description Given a tab, mutates the {@linkcode selectedTab} and {@linkcode displayType} properties 
     *  to the most applicable values, as well as mutates the route so that the native code knows where the
     *  hybrid code is, and notifies the {@linkcode choreographerService} that it should generate a new
     *  {@linkcode delta} value.
     *  @param {string} tab Either {@linkcode day}, {@linkcode week}, {@linkcode month}, or {@linkcode year},
     *  depending on the tab that was pressed.
     */
    $scope.tabClicked = function(tab) {
        if ($scope.baseRoute == undefined) {
            console.error("mil-tabbed-graph-ctrl: baseRoute was never initialized! Event will be ignored.");
            return;
        }
        else if (!$scope.clientIsReady) {
            console.warn("milTabbedGraphCtrl: A tab was clicked, but the hybrid has surrendered routing control at this time. (Did you call resumeRouteControl() first?)");
            return;
        }
        
        switch(tab) {
            case 'day':
                $scope.displayType = BAR_GRAPH;
                $scope.selectedTab = $scope.dayVal;
                $scope.switchRoute($scope.baseRoute + '_day', false);
                choreographerService.notify($scope.dayVal);
                break;
            case 'week':
                $scope.displayType = LINE_GRAPH;
                $scope.selectedTab = $scope.weekVal;
                $scope.switchRoute($scope.baseRoute + '_week', false);
                choreographerService.notify($scope.weekVal);
                break;
            case 'month':
                $scope.displayType = LINE_GRAPH;
                $scope.selectedTab = $scope.monthVal;
                $scope.switchRoute($scope.baseRoute + '_month', false);
                choreographerService.notify($scope.monthVal);
                break;
            case 'year':
                $scope.displayType = LINE_GRAPH;
                $scope.selectedTab = $scope.yearVal;
                $scope.switchRoute($scope.baseRoute + '_year', false);
                choreographerService.notify($scope.yearVal);
                break;
        }
    };
    
});
