package com.ibm.mil;

import java.util.List;

import org.junit.After;
import org.junit.Assert;
import org.junit.Before;
import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.remote.RemoteWebDriver;

public class ExerciseLibraryTest {
	private static RemoteWebDriver driver;
	private static IosUtilities utils = new IosUtilities();
	private static SignInUtilities signInUtils = new SignInUtilities();

	@Before
	public void setup() throws Exception {
		driver = (RemoteWebDriver) utils.iosTestSetupWebDriver(driver);
	}

	@Test
	public void testExerciseLibrary() throws Exception {
		
		//sign in and accept all permissions
		signInUtils.SignInAndPermissionUtilities(driver);
		
		// Wait for next page to load, aka wait for the ouch icon to appear
		utils.waitForElement(driver, "ouch icon");
		
		// Wait for menu to load
		try {
			Thread.sleep(1000);
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

		// Select the menu button to reveal the menu
		WebElement menuButton = utils.waitForElement(driver, "menu icon");
		menuButton.click();

		// Wait for menu to load
		try {
			Thread.sleep(1000);
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		// Save table cells in a list
		List<WebElement> tableCells = driver.findElements(By
				.className("UIATableCell"));
		
		//click on the exercise library tab
		WebElement exerciseLibraryTab = tableCells.get(3);
		exerciseLibraryTab.click();
		
		//wait for the exercise library to load, which will have the "assigned" exercise cell
		WebElement assignedExerciseCell = utils.waitForElement(driver, "Assigned");
		assignedExerciseCell.click();
		
		//TODO: as of now the number of exercises is hardcoded, as the app gets more flushed out
		// this will have to change to adapt to the newer design
		
		WebElement routine1 = utils.waitForElement(driver, "Routine 1");
		routine1.click();
		
		WebElement exercise1= utils.waitForElement(driver, "Exercise 1");
		exercise1.click();
		WebElement fullscreen= utils.waitForElement(driver, "fullscreen icon");
		fullscreen.click();
		
		try {
			Thread.sleep(10000);
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

	}
	
	@After
	public void stop() {
		// Close the session
		utils.iosTestTeardownDriver(driver);
	}
}